Plan:

I. Compile Cicero against the DLL. Cicero will use the library to:
	i. Read any DB-linked variable values from the database
	ii. Create a new sequenceID whenever the run dialog is opened, which the Slaves will look for to associate with the images
	iii. Write a new row of variable values to the database every run

II. Implement the DLL into the Labview slaves:
	i. Whenever the ciceroOut table in the database is updated, slaves will pull the most recent runID and sequence ID
	ii. When a shot is taken, slaves will write the images to the database along with the last pulled values of these IDs
		**Synchronization is key here, as these IDs are the only thing that relate the images to the variable values from Cicero

III. Implement the DLL into a data viewer:
	i. The data viewer will read images from the database when an update occurs
	ii. Variable values can be pulled if desired

IV. Implement the DLL into an analyzer:
	TBD

V. Implement the DLL into a feedback script


** Add variables to the COMPOUND image returning methods
** Add option to Cicero for handshake waiting: database bound variables and slaves